{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:34:02.504Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:34:25.332Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:34:30.691Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:34:49.695Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:37:31.893Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:38:19.181Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:38:41.590Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:38:49.925Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:39:10.234Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:39:16.549Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:39:21.755Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:40:22.790Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:40:26.049Z"}
{"level":"error","message":"connected fail to database ( Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\" )","timestamp":"2023-11-05T14:42:42.134Z"}
{"level":"error","message":"connected fail to database ( Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\" )","timestamp":"2023-11-05T14:44:04.997Z"}
{"level":"error","message":"connected fail to database ( Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\" )","timestamp":"2023-11-05T14:44:27.225Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:44:54.642Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:45:06.242Z"}
{"level":"error","message":"connected fail to database ( The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string. )","timestamp":"2023-11-05T14:45:14.989Z"}
{"level":"error","message":"connected fail to database ( Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\" )","timestamp":"2023-11-05T14:46:02.209Z"}
{"level":"error","message":"connected fail to database ( Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\" )","timestamp":"2023-11-05T14:46:04.632Z"}
{"level":"error","message":"connected fail to database ( Invalid scheme, expected connection string to start with \"mongodb://\" or \"mongodb+srv://\" )","timestamp":"2023-11-05T14:46:26.847Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'email')","timestamp":"2023-11-06T12:44:04.115Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'email')","timestamp":"2023-11-06T12:44:47.421Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'email')","timestamp":"2023-11-06T12:45:04.089Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'email')","timestamp":"2023-11-06T12:46:06.420Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'firstName')","timestamp":"2023-11-06T12:47:20.370Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'email')","timestamp":"2023-11-06T12:55:28.148Z"}
{"level":"error","message":"Expected property name or '}' in JSON at position 7","timestamp":"2023-11-06T12:58:41.856Z"}
{"level":"error","message":"E11000 duplicate key error collection: EcommerceMern.tbl_users index: mobile_1 dup key: { mobile: \"mobile\" }","timestamp":"2023-11-06T17:38:47.392Z"}
{"level":"error","message":"E11000 duplicate key error collection: EcommerceMern.tbl_users index: mobile_1 dup key: { mobile: \"moabilesd\" }","timestamp":"2023-11-06T18:27:12.957Z"}
{"level":"error","message":"user.comparePassword is not a function","timestamp":"2023-11-06T19:10:33.624Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-07T11:26:03.883Z"}
{"level":"error","message":"Cannot read properties of null (reading 'isBlocked')","timestamp":"2023-11-08T08:03:11.496Z"}
{"level":"error","message":"Cannot read properties of null (reading 'isBlocked')","timestamp":"2023-11-08T08:04:31.359Z"}
{"level":"error","message":"Cannot read properties of null (reading 'role')","timestamp":"2023-11-08T08:05:16.204Z"}
{"level":"error","message":"Cannot read properties of null (reading 'role')","timestamp":"2023-11-08T08:06:13.826Z"}
{"level":"error","message":"Cannot read properties of null (reading 'role')","timestamp":"2023-11-08T08:06:14.775Z"}
{"level":"error","message":"Cannot read properties of null (reading 'role')","timestamp":"2023-11-08T08:06:30.429Z"}
{"level":"error","message":"Cannot read properties of null (reading 'isBlocked')","timestamp":"2023-11-08T08:08:39.868Z"}
{"level":"error","message":"Cannot read properties of null (reading 'isBlocked')","timestamp":"2023-11-08T08:10:41.172Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-08T08:56:45.336Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-08T08:56:45.984Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-08T08:57:01.907Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-08T11:08:22.722Z"}
{"level":"error","message":"Cast to string failed for value \"Promise {\n  '$2b$10$IDSA/aM1PiK5l3qjCrrDQ.gsTeXLsYJghrz7SUdtBmf85MhzGQd.K'\n}\" (type Promise) at path \"password\"","timestamp":"2023-11-09T10:14:52.529Z"}
{"level":"error","message":"Expected double-quoted property name in JSON at position 39","timestamp":"2023-11-09T10:18:17.733Z"}
{"level":"error","message":"Expected double-quoted property name in JSON at position 88","timestamp":"2023-11-09T10:18:49.313Z"}
{"level":"error","message":"tbl_product validation failed: slug: Path `slug` is required.","timestamp":"2023-11-09T10:23:02.905Z"}
{"level":"error","message":"tbl_product validation failed: slug: Cast to string failed for value \"Promise { 'product-one' }\" (type Promise) at path \"slug\"","timestamp":"2023-11-09T10:40:46.763Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-09T10:52:54.914Z"}
{"level":"error","message":"Invalid sort() argument. Must be a string, object, or array.","timestamp":"2023-11-09T11:27:04.835Z"}
{"level":"error","message":"Invalid sort() argument. Must be a string, object, or array.","timestamp":"2023-11-09T11:31:16.241Z"}
{"level":"error","message":"Invalid sort value: { _id: 2 }","timestamp":"2023-11-09T13:12:26.362Z"}
{"level":"error","message":"query.split is not a function","timestamp":"2023-11-09T13:24:58.249Z"}
{"level":"error","message":"query.split is not a function","timestamp":"2023-11-09T13:25:31.656Z"}
{"level":"error","message":"Cannot set properties of undefined (setting 'title')","timestamp":"2023-11-09T13:39:39.656Z"}
{"level":"error","message":"tbl_user validation failed: password: Path `password` is required.","timestamp":"2023-11-12T08:17:22.060Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T08:18:44.080Z"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Mongoose'\n    |     property 'connections' -> object with constructor 'Array'\n    |     index 0 -> object with constructor 'NativeConnection'\n    --- property 'base' closes the circle","timestamp":"2023-11-12T09:17:39.107Z"}
{"level":"error","message":"Schema hasn't been registered for model \"test\".\nUse mongoose.model(name, schema)","timestamp":"2023-11-12T09:19:53.606Z"}
{"level":"error","message":"Cannot overwrite `test` model once compiled.","timestamp":"2023-11-12T09:20:58.084Z"}
{"level":"error","message":"test.insertOne is not a function","timestamp":"2023-11-12T09:21:43.555Z"}
{"level":"error","message":"Cannot overwrite `test` model once compiled.","timestamp":"2023-11-12T09:22:55.425Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:25:48.842Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:26:09.574Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:26:22.102Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:26:29.095Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:26:32.816Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:27:50.694Z"}
{"level":"error","message":"Cannot overwrite `tests` model once compiled.","timestamp":"2023-11-12T09:27:54.147Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'isModified')","timestamp":"2023-11-12T10:36:12.835Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'password')","timestamp":"2023-11-12T10:36:23.225Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'password')","timestamp":"2023-11-12T10:36:23.868Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'password')","timestamp":"2023-11-12T10:36:45.373Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'password')","timestamp":"2023-11-12T10:37:08.006Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'password')","timestamp":"2023-11-12T10:37:08.686Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'password')","timestamp":"2023-11-12T10:48:13.949Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'isModified')","timestamp":"2023-11-12T10:51:10.952Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T11:01:06.076Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T11:01:15.804Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T11:02:27.418Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T11:02:28.010Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T11:06:10.194Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T11:06:25.658Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T11:09:09.493Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T11:09:10.111Z"}
{"level":"error","message":"user.isModified is not a function","timestamp":"2023-11-12T12:41:31.988Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:44:08.274Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:44:39.750Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:45:06.208Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:46:50.940Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:47:13.230Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:47:30.014Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:47:35.139Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-12T12:47:48.275Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T12:57:10.299Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T12:57:59.678Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T12:58:33.392Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-12T12:59:19.572Z"}
{"level":"error","message":"user.save is not a function","timestamp":"2023-11-13T13:37:34.001Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:38:13.470Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:38:13.940Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:55:46.786Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:56:35.488Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:57:23.806Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:59:35.104Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:59:36.016Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:59:58.558Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T13:59:59.296Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:00:28.597Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:01:29.941Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:01:30.578Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:01:56.569Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:02:21.044Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:08:56.460Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:09:25.230Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:10:04.756Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:10:49.775Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:13:20.654Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:14:01.789Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:14:18.690Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:15:21.332Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:15:21.973Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:16:12.838Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:16:39.448Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:16:50.260Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:17:15.718Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:17:29.405Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:17:29.930Z"}
{"level":"error","message":"The \"data\" argument must be of type string or an instance of Buffer, TypedArray, or DataView. Received undefined","timestamp":"2023-11-13T14:18:03.166Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:18:49.517Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:18:50.470Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:19:21.929Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:19:28.056Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:20:00.920Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:20:01.307Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:20:45.015Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:21:08.230Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:21:29.605Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:22:10.169Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:23:13.784Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:24:13.007Z"}
{"level":"error","message":"user.save is not a function","timestamp":"2023-11-13T14:25:38.609Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:26:26.628Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:26:33.530Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:27:01.303Z"}
{"level":"error","message":"user.save is not a function","timestamp":"2023-11-13T14:27:18.356Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:27:56.800Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:28:06.047Z"}
{"level":"error","message":"user.save is not a function","timestamp":"2023-11-13T14:28:26.338Z"}
{"level":"error","message":"user.save is not a function","timestamp":"2023-11-13T14:28:26.907Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:30:42.195Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:33:20.145Z"}
{"level":"error","message":"your token is expired go back and do process again","timestamp":"2023-11-13T14:34:27.598Z"}
{"level":"error","message":"tbl_product validation failed: price: Path `price` is required.","timestamp":"2023-11-16T08:18:45.431Z"}
{"level":"error","message":"tbl_product validation failed: price: Path `price` is required.","timestamp":"2023-11-16T08:19:30.593Z"}
{"level":"error","message":"tbl_product validation failed: price: Path `price` is required.","timestamp":"2023-11-16T08:20:54.428Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-16T08:22:29.976Z"}
{"level":"error","message":"data and salt arguments required","timestamp":"2023-11-16T08:22:30.571Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:53:34.517Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:53:47.410Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:54:32.885Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:54:54.040Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:54:54.937Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:54:56.489Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-16T08:55:24.330Z"}
{"level":"error","message":"enter isLike key in body","timestamp":"2023-11-16T12:09:15.357Z"}
{"level":"error","message":"enter isLike key in body","timestamp":"2023-11-16T12:09:30.036Z"}
{"level":"error","message":"enter isLike key in body","timestamp":"2023-11-16T12:09:38.159Z"}
{"level":"error","message":"enter isLike key in body","timestamp":"2023-11-16T12:10:05.116Z"}
{"level":"error","message":"Unexpected end of JSON input","timestamp":"2023-11-19T07:41:09.626Z"}
{"level":"error","message":"Unexpected end of JSON input","timestamp":"2023-11-19T07:41:52.282Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-19T07:48:21.980Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-19T07:52:34.642Z"}
{"level":"error","message":"Cannot set headers after they are sent to the client","timestamp":"2023-11-19T07:53:01.894Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-20T13:41:29.848Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-20T14:02:57.152Z"}
{"level":"error","message":"Cannot destructure property 'id' of 'req.user' as it is undefined.","timestamp":"2023-11-21T07:51:48.131Z"}
{"level":"error","message":"Invalid $addFields :: caused by :: Unrecognized expression '$likes'","timestamp":"2023-11-21T07:54:55.268Z"}
{"level":"error","message":"Invalid $addFields :: caused by :: Expression $eq takes exactly 2 arguments. 1 were passed in.","timestamp":"2023-11-21T07:56:39.780Z"}
{"level":"error","message":"Expected double-quoted property name in JSON at position 31","timestamp":"2023-11-21T07:58:03.404Z"}
{"level":"error","message":"PlanExecutor error during aggregation :: caused by :: $in requires an array as a second argument, found: string","timestamp":"2023-11-21T08:03:08.325Z"}
{"level":"error","message":"Argument passed in must be a string of 12 bytes or a string of 24 hex characters or an integer","timestamp":"2023-11-21T08:15:53.467Z"}
{"level":"error","message":"data and hash arguments required","timestamp":"2023-11-21T13:59:30.982Z"}
{"level":"error","message":"data and hash arguments required","timestamp":"2023-11-21T13:59:39.558Z"}
{"level":"error","message":"data and hash arguments required","timestamp":"2023-11-21T14:01:27.752Z"}
{"level":"error","message":"Expected double-quoted property name in JSON at position 31","timestamp":"2023-11-21T14:07:55.655Z"}
{"level":"error","message":"Expected double-quoted property name in JSON at position 27","timestamp":"2023-11-21T14:09:39.935Z"}
{"level":"error","message":"Invalid $project :: caused by :: projection specification must have at least one field","timestamp":"2023-11-21T14:33:04.201Z"}
{"level":"error","message":"product_categorys_1.default.aggregatePaginate is not a function","timestamp":"2023-11-21T15:08:08.539Z"}
{"level":"error","message":"product_categorys_1.default.aggregatePaginate is not a function","timestamp":"2023-11-21T15:09:16.144Z"}
{"level":"error","message":"product_categorys_1.default.aggregatePaginate is not a function","timestamp":"2023-11-21T15:10:34.357Z"}
{"level":"error","message":"product_categorys_1.default.aggregatePaginate is not a function","timestamp":"2023-11-21T15:11:36.604Z"}
{"level":"error","message":"product_categorys_1.default.aggregatePaginate is not a function","timestamp":"2023-11-21T15:12:03.725Z"}
{"level":"error","message":"product_categorys_1.default.aggregatePaginate is not a function","timestamp":"2023-11-21T15:12:04.573Z"}
{"level":"error","message":"Cannot read properties of null (reading 'active')","timestamp":"2023-11-21T15:30:09.157Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'active')","timestamp":"2023-11-22T10:30:40.585Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'active')","timestamp":"2023-11-22T10:31:07.616Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-22T11:27:10.885Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'active')","timestamp":"2023-11-22T11:33:45.192Z"}
{"level":"error","message":"Plan executor error during findAndModify :: caused by :: Cannot use the part (userId) of (rating.userId) to traverse the element ({rating: [ { rate: 5, userId: ObjectId('655cb8fc53b9dce6f55ea0fb'), _id: ObjectId('655e0ea04b8d42d5fa8c46e0') } ]})","timestamp":"2023-11-22T14:25:47.147Z"}
{"level":"error","message":"Cast to Number failed for value \"655cb8fc53b9dce6f55ea0fb\" (type string) at path \"rate\"","timestamp":"2023-11-22T14:26:41.708Z"}
{"level":"error","message":"Cast to Number failed for value \"655cb8fc53b9dce6f55ea0fb\" (type string) at path \"rate\"","timestamp":"2023-11-22T14:32:44.008Z"}
{"level":"error","message":"Plan executor error during findAndModify :: caused by :: Cannot use the part (userId) of (rating.userId) to traverse the element ({rating: [ { rate: 5, userId: ObjectId('655cb8fc53b9dce6f55ea0fb'), _id: ObjectId('655e10bd5ba80e8eecc05004') } ]})","timestamp":"2023-11-22T14:33:00.966Z"}
{"level":"error","message":"path option to $unwind stage should be prefixed with a '$': rating","timestamp":"2023-11-22T15:19:58.065Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:20:20.125Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:20:38.941Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:22:11.105Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:22:40.456Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:23:13.713Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:26:26.169Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:28:29.820Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:29:45.529Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:30:52.779Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:30:53.774Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:35:21.333Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:36:07.973Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:36:09.988Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:36:31.336Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:36:32.638Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:36:43.065Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:37:48.507Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:37:49.259Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:37:50.501Z"}
{"level":"error","message":"product_1.default.aggregatePaginate is not a function","timestamp":"2023-11-22T15:37:51.202Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:50:46.543Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:51:18.389Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:51:19.381Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:52:00.721Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:52:15.068Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:52:17.013Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:52:18.344Z"}
{"level":"error","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","timestamp":"2023-11-22T15:52:19.521Z"}
{"level":"error","message":"Invalid $project :: caused by :: Cannot do inclusion on field description in exclusion projection","timestamp":"2023-11-22T15:54:25.524Z"}
{"level":"error","message":"Invalid $project :: caused by :: Cannot do inclusion on field description in exclusion projection","timestamp":"2023-11-22T15:54:26.365Z"}
{"level":"error","message":"Invalid $project :: caused by :: Cannot do inclusion on field description in exclusion projection","timestamp":"2023-11-22T16:40:26.523Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'comment')","timestamp":"2023-11-22T19:01:27.938Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'comment')","timestamp":"2023-11-22T19:02:13.233Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'comment')","timestamp":"2023-11-22T19:03:24.980Z"}
{"level":"error","message":"tbl_product_comment validation failed: user_id: Path `user_id` is required.","timestamp":"2023-11-22T19:04:30.041Z"}
{"level":"error","message":"Unexpected end of form","timestamp":"2023-11-26T11:34:40.245Z"}
{"level":"error","message":"Unexpected end of form","timestamp":"2023-11-26T11:34:42.945Z"}
{"level":"error","message":"Unexpected end of form","timestamp":"2023-11-26T11:34:54.416Z"}
{"level":"error","message":"Unexpected end of form","timestamp":"2023-11-26T11:35:57.075Z"}
{"level":"error","message":"Unexpected end of form","timestamp":"2023-11-26T11:37:08.586Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-26T11:45:01.592Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-26T11:48:42.284Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-26T11:48:42.869Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-26T11:49:36.679Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-26T11:49:49.661Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T07:30:07.743Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T07:36:17.397Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T07:36:27.735Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T07:36:56.969Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-27T07:47:06.753Z"}
{"level":"error","message":"Missing required parameter - file","timestamp":"2023-11-27T07:48:09.762Z"}
{"level":"error","message":"The \"path\" argument must be of type string. Received an instance of Object","timestamp":"2023-11-27T07:49:08.270Z"}
{"level":"error","message":"The \"path\" argument must be of type string. Received an instance of Object","timestamp":"2023-11-27T07:52:41.263Z"}
{"level":"error","message":"The \"path\" argument must be of type string. Received an instance of Buffer","timestamp":"2023-11-27T07:55:38.576Z"}
{"level":"error","message":"The argument 'path' must be a string, Uint8Array, or URL without null bytes. Received \"����\\x00\\x10JFIF\\x00\\x01\\x01\\x01\\x01,\\x01,\\x00\\x00��\\x00VExif\\x00\\x00MM\\x00*\\x00\\x00\\x00\\b\\x00\\x04\\x01\\x1A\\x00\\x05\\x00\\x00\\x00\\...","timestamp":"2023-11-27T07:56:37.815Z"}
{"level":"error","message":"D:\\my projects\\Ecommerce\\upload: unable to open for write\nwindows error: The device is not ready.","timestamp":"2023-11-27T08:02:37.361Z"}
{"level":"error","message":"D:\\my projects\\Ecommerce\\upload: unable to open for write\nwindows error: The device is not ready.","timestamp":"2023-11-27T08:03:02.467Z"}
{"level":"error","message":"D:\\my projects\\Ecommerce\\upload: unable to open for write\nwindows error: The device is not ready.","timestamp":"2023-11-27T08:03:03.964Z"}
{"level":"error","message":"D:\\my projects\\Ecommerce\\upload: unable to open for write\nwindows error: The device is not ready.","timestamp":"2023-11-27T08:03:28.365Z"}
{"level":"error","message":"../../../upload/ahmed.jpeg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:05:27.057Z"}
{"level":"error","message":"../../../upload/ahmed: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:07:14.407Z"}
{"level":"error","message":"../../../upload/undefined: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:08:44.083Z"}
{"level":"error","message":"../../../upload/undefined: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:09:05.843Z"}
{"level":"error","message":"../../upload/login.jpg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:09:39.073Z"}
{"level":"error","message":"../../upload/login.jpg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:09:39.765Z"}
{"level":"error","message":"../../../upload/login.jpg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:09:54.403Z"}
{"level":"error","message":"../../../upload/login.jpg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:21:53.888Z"}
{"level":"error","message":"../../../assets/login.jpg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:23:51.480Z"}
{"level":"error","message":"../../../assets/login.jpg: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:23:52.097Z"}
{"level":"error","message":"D:\\my projects\\assets\\test: unable to open for write\nwindows error: The system cannot find the file specified.","timestamp":"2023-11-27T08:53:40.647Z"}
{"level":"error","message":"Invalid input","timestamp":"2023-11-27T10:53:51.146Z"}
{"level":"error","message":"Invalid input","timestamp":"2023-11-27T10:54:32.491Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-27T11:00:22.358Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T11:00:37.673Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-27T11:00:48.600Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:01:28.674Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:02:17.898Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:02:29.066Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:02:35.102Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:03:04.345Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:03:05.014Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:04:12.205Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:05:24.531Z"}
{"level":"error","message":"Input file is missing:","timestamp":"2023-11-27T11:05:47.571Z"}
{"level":"error","message":"Missing required parameter - file","timestamp":"2023-11-27T12:10:44.363Z"}
{"level":"error","message":"Missing required parameter - file","timestamp":"2023-11-27T12:11:17.517Z"}
{"level":"error","message":"Missing required parameter - file","timestamp":"2023-11-27T12:11:47.062Z"}
{"level":"error","message":"Expected positive integer for width but received 100 of type string","timestamp":"2023-11-27T12:13:24.365Z"}
{"level":"error","message":"tbl_blog validation failed: slug: Path `slug` is required.","timestamp":"2023-11-27T19:50:15.091Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'length')","timestamp":"2023-11-27T19:55:47.976Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'length')","timestamp":"2023-11-27T20:00:32.423Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'length')","timestamp":"2023-11-27T20:01:48.845Z"}
{"level":"error","message":"chose your images","timestamp":"2023-11-27T20:05:33.365Z"}
{"level":"error","message":"chose your images","timestamp":"2023-11-27T20:06:09.904Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T20:06:19.446Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T20:06:29.181Z"}
{"level":"error","message":"unsupported file form","timestamp":"2023-11-27T20:06:37.146Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-27T20:06:53.395Z"}
{"level":"error","message":"Expected positive integer for width but received NaN of type number","timestamp":"2023-11-27T20:07:57.307Z"}
{"level":"error","message":"connected fail to database ( Can't call `openUri()` on an active connection with different connection strings. Make sure you aren't calling `mongoose.connect()` multiple times. See: https://mongoosejs.com/docs/connections.html#multiple_connections )","timestamp":"2023-11-28T09:40:33.271Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:34:53.544Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:36:01.972Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:36:43.091Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:36:45.284Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:37:25.626Z"}
{"level":"error","message":"Cannot read properties of null (reading 'images')","timestamp":"2023-11-28T10:38:19.717Z"}
{"level":"error","message":"Cannot read properties of null (reading 'images')","timestamp":"2023-11-28T10:39:35.892Z"}
{"level":"error","timestamp":"2023-11-28T10:39:59.202Z"}
{"level":"error","timestamp":"2023-11-28T10:40:02.652Z"}
{"level":"error","timestamp":"2023-11-28T10:41:14.639Z"}
{"level":"error","timestamp":"2023-11-28T10:42:52.049Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:45:11.046Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:45:45.884Z"}
{"level":"error","message":"Unexpected field","timestamp":"2023-11-28T10:45:47.446Z"}
{"level":"error","message":"chose your product images","timestamp":"2023-11-28T11:03:14.806Z"}
{"level":"error","message":"Cannot read properties of null (reading 'populate')","timestamp":"2023-11-28T11:34:43.169Z"}
{"level":"error","message":"Unrecognized pipeline stage name: '$ifNull'","timestamp":"2023-11-28T11:52:01.618Z"}
{"level":"error","message":"Unrecognized pipeline stage name: '$cond'","timestamp":"2023-11-28T11:52:12.761Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-28T12:31:54.107Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-28T12:31:54.748Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-28T12:37:03.121Z"}
{"level":"error","message":"invalid argument to $skip stage: Expected an integer, but found NaN in: $skip: nan.0","timestamp":"2023-11-28T12:37:05.948Z"}
{"level":"error","message":"$sort stage must have at least one sort key","timestamp":"2023-11-28T12:38:52.960Z"}
{"level":"error","message":"tbl_product validation failed: discount: Tried to set nested object field `discount` to primitive value `0`","timestamp":"2023-11-28T19:33:25.768Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:32:13.388Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:33:48.575Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:35:32.228Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:37:14.796Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:38:35.709Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:39:10.506Z"}
{"level":"error","message":"unknown top level operator: $in. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","timestamp":"2023-12-03T14:39:34.681Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9359dd65845423a8fac8' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T14:41:17.376Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c94df3fb9a2f0f0551b70' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T14:49:41.681Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c94df3fb9a2f0f0551b70' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T14:51:57.137Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c94df3fb9a2f0f0551b70' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T14:53:34.002Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c94df3fb9a2f0f0551b70' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T14:54:24.278Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c96f5e726efcebb4ed1af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T14:58:51.129Z"}
{"level":"error","message":"product.forEach is not a function","timestamp":"2023-12-03T15:13:32.885Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9a9188d85f85eb9f5dd3' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:13:54.055Z"}
{"level":"error","message":"tbl_cart validation failed: total_price: Cast to Number failed for value \"NaN\" (type number) at path \"total_price\", price_after_discount: Cast to Number failed for value \"NaN\" (type number) at path \"price_after_discount\"","timestamp":"2023-12-03T15:15:16.377Z"}
{"level":"error","message":"tbl_cart validation failed: total_price: Cast to Number failed for value \"NaN\" (type number) at path \"total_price\", price_after_discount: Cast to Number failed for value \"NaN\" (type number) at path \"price_after_discount\"","timestamp":"2023-12-03T15:16:35.853Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9bea4399fec46bf2efdb' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:17:15.237Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9bea4399fec46bf2efdb' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:21:29.742Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9d2b9ec6943caec105af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:22:57.732Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9d2b9ec6943caec105af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:24:02.200Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9d2b9ec6943caec105af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:25:11.047Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9d2b9ec6943caec105af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:25:37.745Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9d2b9ec6943caec105af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:26:00.458Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656c9d2b9ec6943caec105af' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:26:42.012Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{\n  id: '656c9d2b9ec6943caec105af',\n  products: { '$elemMatch': { user_id: '655e20fb41bbc822531d3c46' } }\n}\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:28:06.598Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{\n  id: '656c9d2b9ec6943caec105af',\n  products: { '$elemMatch': { user_id: '655e20fb41bbc822531d3c46' } }\n}\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T15:29:08.232Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656ccc91a51921c137029934' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T18:45:02.913Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656ccc91a51921c137029934' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T18:45:58.691Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656ccc91a51921c137029934' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T18:47:28.188Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ id: '656ccc91a51921c137029934' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-03T18:51:01.034Z"}
{"level":"error","message":"this product not belong to you","timestamp":"2023-12-03T19:34:07.360Z"}
{"level":"error","message":"this product not belong to you","timestamp":"2023-12-03T19:39:03.447Z"}
{"level":"error","message":"Cannot populate path `title` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2023-12-03T19:55:28.258Z"}
{"level":"error","message":"Cannot populate path `products.product_id.products.product_id.category` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2023-12-03T19:59:23.443Z"}
{"level":"error","message":"Schema hasn't been registered for model \"tbl_category\".\nUse mongoose.model(name, schema)","timestamp":"2023-12-03T19:59:47.752Z"}
{"level":"error","message":"Schema hasn't been registered for model \"tbl_category\".\nUse mongoose.model(name, schema)","timestamp":"2023-12-03T19:59:48.957Z"}
{"level":"error","message":"Schema hasn't been registered for model \"tbl_categorys\".\nUse mongoose.model(name, schema)","timestamp":"2023-12-03T20:00:31.907Z"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2023-12-04T07:39:17.790Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:41:45.976Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:42:35.731Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:43:53.028Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:44:08.424Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:46:15.407Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:46:35.828Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:46:36.591Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:47:49.169Z"}
{"level":"error","message":"Cast to ObjectId failed for value \"{ user_id: '655e20fb41bbc822531d3c46' }\" (type Object) at path \"_id\" for model \"tbl_cart\"","timestamp":"2023-12-04T07:48:16.816Z"}
